{"ast":null,"code":"import { defineComponent, ref, onBeforeMount, onBeforeUnmount, watch, h } from \"vue\";\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + \" argument\" + (required > 1 ? \"s\" : \"\") + \" required, but only \" + args.length + \" present\");\n  }\n}\nfunction toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n  if (argument instanceof Date || typeof argument === \"object\" && argStr === \"[object Date]\") {\n    return new Date(argument.getTime());\n  } else if (typeof argument === \"number\" || argStr === \"[object Number]\") {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === \"string\" || argStr === \"[object String]\") && typeof console !== \"undefined\") {\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\");\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}\nfunction getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\nfunction compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n  } else {\n    return diff;\n  }\n}\nvar millisecondsInMinute = 6e4;\nvar millisecondsInHour = 36e5;\nfunction differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}\nfunction differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}\nvar roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function (value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  }\n};\nvar defaultRoundingMethod = \"trunc\";\nfunction getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}\nfunction endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\nfunction endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\nfunction isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}\nfunction differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result;\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n  return result === 0 ? 0 : result;\n}\nfunction differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1e3;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\"\n  },\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\"\n  },\n  halfAMinute: \"half a minute\",\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\"\n  },\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\"\n  },\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\"\n  },\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\"\n  },\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\"\n  },\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\"\n  },\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\"\n  },\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\"\n  },\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\"\n  },\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\"\n  },\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\"\n  },\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\"\n  },\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\"\n  }\n};\nvar formatDistance$1 = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n  return result;\n};\nvar formatDistance$2 = formatDistance$1;\nfunction buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\nvar dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\"\n};\nvar timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\"\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\"\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\"\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\"\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\"\n  })\n};\nvar formatLong$1 = formatLong;\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\"\n};\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nvar formatRelative$1 = formatRelative;\nfunction buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : \"standalone\";\n    var valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}\nvar eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"]\n};\nvar quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"]\n};\nvar monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  wide: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n};\nvar dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  }\n};\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\nvar localize = {\n  ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\"\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\"\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\"\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\"\n  })\n};\nvar localize$1 = localize;\nfunction buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value,\n      rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return void 0;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return void 0;\n}\nfunction buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value,\n      rest\n    };\n  };\n}\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\"\n  })\n};\nvar match$1 = match;\nvar locale = {\n  code: \"en-US\",\n  formatDistance: formatDistance$2,\n  formatLong: formatLong$1,\n  formatRelative: formatRelative$1,\n  localize: localize$1,\n  match: match$1,\n  options: {\n    weekStartsOn: 0,\n    firstWeekContainsDate: 1\n  }\n};\nvar defaultLocale = locale;\nfunction assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError(\"assign requires that input parameter not be null or undefined\");\n  }\n  dirtyObject = dirtyObject || {};\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n  return target;\n}\nfunction cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}\nvar MINUTES_IN_DAY$1 = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH$1 = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\nfunction formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale2 = options.locale || defaultLocale;\n  if (!locale2.formatDistance) {\n    throw new RangeError(\"locale must contain formatDistance property\");\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1e3;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months;\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale2.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale2.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale2.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale2.formatDistance(\"halfAMinute\", null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale2.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale2.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale2.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale2.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n  } else if (minutes < 45) {\n    return locale2.formatDistance(\"xMinutes\", minutes, localizeOptions);\n  } else if (minutes < 90) {\n    return locale2.formatDistance(\"aboutXHours\", 1, localizeOptions);\n  } else if (minutes < MINUTES_IN_DAY$1) {\n    var hours = Math.round(minutes / 60);\n    return locale2.formatDistance(\"aboutXHours\", hours, localizeOptions);\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale2.formatDistance(\"xDays\", 1, localizeOptions);\n  } else if (minutes < MINUTES_IN_MONTH$1) {\n    var days = Math.round(minutes / MINUTES_IN_DAY$1);\n    return locale2.formatDistance(\"xDays\", days, localizeOptions);\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH$1);\n    return locale2.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n  months = differenceInMonths(dateRight, dateLeft);\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH$1);\n    return locale2.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12);\n    if (monthsSinceStartOfYear < 3) {\n      return locale2.formatDistance(\"aboutXYears\", years, localizeOptions);\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale2.formatDistance(\"overXYears\", years, localizeOptions);\n    } else {\n      return locale2.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\nvar MILLISECONDS_IN_MINUTE = 1e3 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\nfunction formatDistanceStrict(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale2 = options.locale || defaultLocale;\n  if (!locale2.formatDistance) {\n    throw new RangeError(\"locale must contain localize.formatDistance property\");\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var roundingMethod = options.roundingMethod == null ? \"round\" : String(options.roundingMethod);\n  var roundingMethodFn;\n  if (roundingMethod === \"floor\") {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === \"ceil\") {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === \"round\") {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft);\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var unit;\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = \"second\";\n    } else if (minutes < 60) {\n      unit = \"minute\";\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = \"hour\";\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = \"day\";\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = \"month\";\n    } else {\n      unit = \"year\";\n    }\n  } else {\n    unit = String(options.unit);\n  }\n  if (unit === \"second\") {\n    var seconds = roundingMethodFn(milliseconds / 1e3);\n    return locale2.formatDistance(\"xSeconds\", seconds, localizeOptions);\n  } else if (unit === \"minute\") {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale2.formatDistance(\"xMinutes\", roundedMinutes, localizeOptions);\n  } else if (unit === \"hour\") {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale2.formatDistance(\"xHours\", hours, localizeOptions);\n  } else if (unit === \"day\") {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale2.formatDistance(\"xDays\", days, localizeOptions);\n  } else if (unit === \"month\") {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && options.unit !== \"month\" ? locale2.formatDistance(\"xYears\", 1, localizeOptions) : locale2.formatDistance(\"xMonths\", months, localizeOptions);\n  } else if (unit === \"year\") {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale2.formatDistance(\"xYears\", years, localizeOptions);\n  }\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}\nfunction formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistance(dirtyDate, Date.now(), dirtyOptions);\n}\nfunction formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), dirtyOptions);\n}\nfunction parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError(\"additionalDigits must be 0, 1 or 2\");\n  }\n  if (!(typeof argument === \"string\" || Object.prototype.toString.call(argument) === \"[object String]\")) {\n    return new Date(NaN);\n  }\n  var dateStrings = splitDateString(argument);\n  var date;\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time);\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n  if (array.length > 2) {\n    return dateStrings;\n  }\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n  return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp(\"^(?:(\\\\d{4}|[+-]\\\\d{\" + (4 + additionalDigits) + \"})|(\\\\d{2}|[+-]\\\\d{\" + (2 + additionalDigits) + \"})$)\");\n  var captures = dateString.match(regex);\n  if (!captures) return {\n    year: NaN,\n    restDateString: \"\"\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null;\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\nfunction parseDate(dateString, year) {\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex);\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN;\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1e3;\n}\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(\",\", \".\")) || 0;\n}\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === \"+\" ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\nvar defaultConverter = (date, converterOptions = {}, locale2) => {\n  var _a, _b;\n  if (typeof date === \"string\") {\n    date = parseISO(date);\n  }\n  if (converterOptions.useStrict) {\n    return formatDistanceToNowStrict(date, {\n      addSuffix: (_a = converterOptions.addSuffix) != null ? _a : true,\n      locale: locale2,\n      unit: converterOptions.unit,\n      roundingMethod: converterOptions.roundingMethod\n    });\n  }\n  return formatDistanceToNow(date, {\n    includeSeconds: converterOptions.includeSeconds,\n    addSuffix: (_b = converterOptions.addSuffix) != null ? _b : true,\n    locale: locale2\n  });\n};\nconst createTimeago = (opts = {}) => {\n  const name = opts.name || \"Timeago\";\n  return defineComponent({\n    name,\n    props: {\n      datetime: {\n        type: [String, Number, Date],\n        required: true\n      },\n      title: {\n        type: [String, Boolean],\n        required: false,\n        default: null\n      },\n      autoUpdate: {\n        type: [Number, Boolean],\n        required: false,\n        default: null\n      },\n      converter: {\n        type: Function,\n        required: false,\n        default: null\n      },\n      converterOptions: {\n        type: Object,\n        required: false,\n        default: null\n      },\n      locale: {\n        type: Object,\n        required: false,\n        default: null\n      }\n    },\n    setup(props) {\n      const updateTimer = ref();\n      onBeforeMount(() => {\n        startUpdater();\n      });\n      onBeforeUnmount(() => {\n        stopUpdater();\n      });\n      const getTimeago = datetime => {\n        const converter = props.converter || defaultConverter;\n        return converter(datetime || props.datetime, props.converterOptions || opts.converterOptions, props.locale || opts.locale);\n      };\n      const timeago = ref(getTimeago());\n      const convert = datetime => {\n        timeago.value = getTimeago(datetime);\n      };\n      const startUpdater = () => {\n        if (props.autoUpdate) {\n          const autoUpdate = props.autoUpdate === true ? 60 : props.autoUpdate;\n          updateTimer.value = setInterval(() => {\n            convert(props.datetime);\n          }, autoUpdate * 1e3);\n        }\n      };\n      const stopUpdater = () => {\n        if (updateTimer.value) {\n          clearInterval(updateTimer.value);\n          updateTimer.value = void 0;\n        }\n      };\n      watch(() => props.autoUpdate, newValue => {\n        stopUpdater();\n        if (newValue) {\n          startUpdater();\n        }\n      });\n      watch(() => [props.datetime, props.converter], () => {\n        convert();\n      });\n      watch(() => props.converterOptions, () => {\n        convert();\n      }, {\n        deep: true\n      });\n      return {\n        timeago,\n        updateTimer\n      };\n    },\n    render() {\n      return h(\"timeago\", {\n        attrs: {\n          datetime: new Date(this.datetime).toISOString(),\n          title: typeof this.title === \"string\" ? this.title : this.title === false ? null : this.timeago\n        }\n      }, [this.timeago]);\n    }\n  });\n};\nvar install = (app, options) => {\n  if (app.config.globalProperties.$timeago) {\n    return;\n  }\n  const version = Number(app.version.split(\".\")[0]);\n  if (version < 3) {\n    console.warn(\"[vue-timeago3] This plugin requires at least Vue version 3.0\");\n  }\n  const Component = createTimeago(options);\n  app.component(Component.name, Component);\n};\nexport { install as default };","map":{"version":3,"names":["defineComponent","ref","onBeforeMount","onBeforeUnmount","watch","h","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","getTimezoneOffsetInMilliseconds","date","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","compareAsc","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","diff","millisecondsInMinute","millisecondsInHour","differenceInCalendarMonths","yearDiff","monthDiff","differenceInMilliseconds","roundingMap","round","trunc","value","defaultRoundingMethod","getRoundingMethod","method","endOfDay","dirtyDate","setHours","endOfMonth","month","setFullYear","isLastDayOfMonth","differenceInMonths","sign","difference","abs","result","setDate","setMonth","isLastMonthNotFull","differenceInSeconds","options","roundingMethod","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatDistance$1","token","count","tokenValue","replace","addSuffix","comparison","formatDistance$2","buildFormatLongFn","width","String","defaultWidth","format","formats","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","time","dateTime","formatLong$1","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","_date","_baseDate","_options","formatRelative$1","buildLocalizeFn","dirtyIndex","dirtyOptions","context","valuesArray","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","index","argumentCallback","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","rem100","localize","era","quarter","day","dayPeriod","localize$1","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","key","Array","isArray","findIndex","pattern","test","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","buildMatchPatternFn","parseResult","parsePattern","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","parseInt","match$1","locale","code","formatDistance","weekStartsOn","firstWeekContainsDate","defaultLocale","assign","target","dirtyObject","property","cloneObject","MINUTES_IN_DAY$1","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH$1","MINUTES_IN_TWO_MONTHS","dirtyBaseDate","locale2","RangeError","localizeOptions","Boolean","seconds","offsetInSeconds","minutes","months","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","MILLISECONDS_IN_MINUTE","MINUTES_IN_DAY","MINUTES_IN_MONTH","MINUTES_IN_YEAR","formatDistanceStrict","roundingMethodFn","milliseconds","timezoneOffset","dstNormalizedMinutes","unit","roundedMinutes","formatDistanceToNow","now","formatDistanceToNowStrict","parseISO","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","year","timestamp","offset","parseTime","timezone","parseTimezone","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","patterns","dateTimeDelimiter","timeZoneDelimiter","dateRegex","timeRegex","timezoneRegex","dateString","split","timeString","substr","exec","regex","RegExp","captures","century","isWeekDate","dayOfYear","parseDateUnit","week","dayOfWeek","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","max","parseTimeUnit","validateTime","parseFloat","timezoneString","validateTimezone","isoWeekYear","fourthOfJanuaryDay","getUTCDay","setUTCDate","daysInMonths","isLeapYearIndex","_year","_hours","defaultConverter","converterOptions","_a","_b","useStrict","createTimeago","opts","name","props","datetime","type","title","default","autoUpdate","converter","Function","setup","updateTimer","startUpdater","stopUpdater","getTimeago","timeago","convert","setInterval","clearInterval","newValue","deep","render","attrs","toISOString","install","app","config","globalProperties","$timeago","version","Component","component"],"sources":["D:/semestr/web-optimization/webchat-frontend-master/node_modules/vue-timeago3/dist/vue-timeago.es.js"],"sourcesContent":["import { defineComponent, ref, onBeforeMount, onBeforeUnmount, watch, h } from \"vue\";\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + \" argument\" + (required > 1 ? \"s\" : \"\") + \" required, but only \" + args.length + \" present\");\n  }\n}\nfunction toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n  if (argument instanceof Date || typeof argument === \"object\" && argStr === \"[object Date]\") {\n    return new Date(argument.getTime());\n  } else if (typeof argument === \"number\" || argStr === \"[object Number]\") {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === \"string\" || argStr === \"[object String]\") && typeof console !== \"undefined\") {\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\");\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}\nfunction getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}\nfunction compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n  } else {\n    return diff;\n  }\n}\nvar millisecondsInMinute = 6e4;\nvar millisecondsInHour = 36e5;\nfunction differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}\nfunction differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}\nvar roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  }\n};\nvar defaultRoundingMethod = \"trunc\";\nfunction getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}\nfunction endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\nfunction endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\nfunction isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}\nfunction differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result;\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference);\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n  return result === 0 ? 0 : result;\n}\nfunction differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1e3;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\"\n  },\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\"\n  },\n  halfAMinute: \"half a minute\",\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\"\n  },\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\"\n  },\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\"\n  },\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\"\n  },\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\"\n  },\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\"\n  },\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\"\n  },\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\"\n  },\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\"\n  },\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\"\n  },\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\"\n  },\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\"\n  },\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\"\n  }\n};\nvar formatDistance$1 = function(token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n  return result;\n};\nvar formatDistance$2 = formatDistance$1;\nfunction buildFormatLongFn(args) {\n  return function() {\n    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\nvar dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\"\n};\nvar timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\"\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\"\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\"\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\"\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\"\n  })\n};\nvar formatLong$1 = formatLong;\nvar formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\"\n};\nvar formatRelative = function(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\nvar formatRelative$1 = formatRelative;\nfunction buildLocalizeFn(args) {\n  return function(dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : \"standalone\";\n    var valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}\nvar eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"]\n};\nvar quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"]\n};\nvar monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n  wide: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n};\nvar dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\"\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\"\n  }\n};\nvar ordinalNumber = function(dirtyNumber, _options) {\n  var number = Number(dirtyNumber);\n  var rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\nvar localize = {\n  ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\"\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: function(quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\"\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\"\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\"\n  })\n};\nvar localize$1 = localize;\nfunction buildMatchFn(args) {\n  return function(string) {\n    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n    if (!matchResult) {\n      return null;\n    }\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function(pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value,\n      rest\n    };\n  };\n}\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n  return void 0;\n}\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return void 0;\n}\nfunction buildMatchPatternFn(args) {\n  return function(string) {\n    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult)\n      return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult)\n      return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value,\n      rest\n    };\n  };\n}\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: function(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\"\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\"\n  })\n};\nvar match$1 = match;\nvar locale = {\n  code: \"en-US\",\n  formatDistance: formatDistance$2,\n  formatLong: formatLong$1,\n  formatRelative: formatRelative$1,\n  localize: localize$1,\n  match: match$1,\n  options: {\n    weekStartsOn: 0,\n    firstWeekContainsDate: 1\n  }\n};\nvar defaultLocale = locale;\nfunction assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError(\"assign requires that input parameter not be null or undefined\");\n  }\n  dirtyObject = dirtyObject || {};\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n  return target;\n}\nfunction cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}\nvar MINUTES_IN_DAY$1 = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH$1 = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\nfunction formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale2 = options.locale || defaultLocale;\n  if (!locale2.formatDistance) {\n    throw new RangeError(\"locale must contain formatDistance property\");\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1e3;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months;\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale2.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale2.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale2.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale2.formatDistance(\"halfAMinute\", null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale2.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale2.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale2.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale2.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n  } else if (minutes < 45) {\n    return locale2.formatDistance(\"xMinutes\", minutes, localizeOptions);\n  } else if (minutes < 90) {\n    return locale2.formatDistance(\"aboutXHours\", 1, localizeOptions);\n  } else if (minutes < MINUTES_IN_DAY$1) {\n    var hours = Math.round(minutes / 60);\n    return locale2.formatDistance(\"aboutXHours\", hours, localizeOptions);\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale2.formatDistance(\"xDays\", 1, localizeOptions);\n  } else if (minutes < MINUTES_IN_MONTH$1) {\n    var days = Math.round(minutes / MINUTES_IN_DAY$1);\n    return locale2.formatDistance(\"xDays\", days, localizeOptions);\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH$1);\n    return locale2.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n  months = differenceInMonths(dateRight, dateLeft);\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH$1);\n    return locale2.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12);\n    if (monthsSinceStartOfYear < 3) {\n      return locale2.formatDistance(\"aboutXYears\", years, localizeOptions);\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale2.formatDistance(\"overXYears\", years, localizeOptions);\n    } else {\n      return locale2.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\nvar MILLISECONDS_IN_MINUTE = 1e3 * 60;\nvar MINUTES_IN_DAY = 60 * 24;\nvar MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;\nvar MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;\nfunction formatDistanceStrict(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale2 = options.locale || defaultLocale;\n  if (!locale2.formatDistance) {\n    throw new RangeError(\"locale must contain localize.formatDistance property\");\n  }\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n  if (isNaN(comparison)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n  var roundingMethod = options.roundingMethod == null ? \"round\" : String(options.roundingMethod);\n  var roundingMethodFn;\n  if (roundingMethod === \"floor\") {\n    roundingMethodFn = Math.floor;\n  } else if (roundingMethod === \"ceil\") {\n    roundingMethodFn = Math.ceil;\n  } else if (roundingMethod === \"round\") {\n    roundingMethodFn = Math.round;\n  } else {\n    throw new RangeError(\"roundingMethod must be 'floor', 'ceil' or 'round'\");\n  }\n  var milliseconds = dateRight.getTime() - dateLeft.getTime();\n  var minutes = milliseconds / MILLISECONDS_IN_MINUTE;\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft);\n  var dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;\n  var unit;\n  if (options.unit == null) {\n    if (minutes < 1) {\n      unit = \"second\";\n    } else if (minutes < 60) {\n      unit = \"minute\";\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = \"hour\";\n    } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {\n      unit = \"day\";\n    } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {\n      unit = \"month\";\n    } else {\n      unit = \"year\";\n    }\n  } else {\n    unit = String(options.unit);\n  }\n  if (unit === \"second\") {\n    var seconds = roundingMethodFn(milliseconds / 1e3);\n    return locale2.formatDistance(\"xSeconds\", seconds, localizeOptions);\n  } else if (unit === \"minute\") {\n    var roundedMinutes = roundingMethodFn(minutes);\n    return locale2.formatDistance(\"xMinutes\", roundedMinutes, localizeOptions);\n  } else if (unit === \"hour\") {\n    var hours = roundingMethodFn(minutes / 60);\n    return locale2.formatDistance(\"xHours\", hours, localizeOptions);\n  } else if (unit === \"day\") {\n    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);\n    return locale2.formatDistance(\"xDays\", days, localizeOptions);\n  } else if (unit === \"month\") {\n    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);\n    return months === 12 && options.unit !== \"month\" ? locale2.formatDistance(\"xYears\", 1, localizeOptions) : locale2.formatDistance(\"xMonths\", months, localizeOptions);\n  } else if (unit === \"year\") {\n    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);\n    return locale2.formatDistance(\"xYears\", years, localizeOptions);\n  }\n  throw new RangeError(\"unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'\");\n}\nfunction formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistance(dirtyDate, Date.now(), dirtyOptions);\n}\nfunction formatDistanceToNowStrict(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return formatDistanceStrict(dirtyDate, Date.now(), dirtyOptions);\n}\nfunction parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError(\"additionalDigits must be 0, 1 or 2\");\n  }\n  if (!(typeof argument === \"string\" || Object.prototype.toString.call(argument) === \"[object String]\")) {\n    return new Date(NaN);\n  }\n  var dateStrings = splitDateString(argument);\n  var date;\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time);\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString;\n  if (array.length > 2) {\n    return dateStrings;\n  }\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n  return dateStrings;\n}\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp(\"^(?:(\\\\d{4}|[+-]\\\\d{\" + (4 + additionalDigits) + \"})|(\\\\d{2}|[+-]\\\\d{\" + (2 + additionalDigits) + \"})$)\");\n  var captures = dateString.match(regex);\n  if (!captures)\n    return {\n      year: NaN,\n      restDateString: \"\"\n    };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null;\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\nfunction parseDate(dateString, year) {\n  if (year === null)\n    return new Date(NaN);\n  var captures = dateString.match(dateRegex);\n  if (!captures)\n    return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures)\n    return NaN;\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1e3;\n}\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(\",\", \".\")) || 0;\n}\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\")\n    return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures)\n    return 0;\n  var sign = captures[1] === \"+\" ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\nvar defaultConverter = (date, converterOptions = {}, locale2) => {\n  var _a, _b;\n  if (typeof date === \"string\") {\n    date = parseISO(date);\n  }\n  if (converterOptions.useStrict) {\n    return formatDistanceToNowStrict(date, {\n      addSuffix: (_a = converterOptions.addSuffix) != null ? _a : true,\n      locale: locale2,\n      unit: converterOptions.unit,\n      roundingMethod: converterOptions.roundingMethod\n    });\n  }\n  return formatDistanceToNow(date, {\n    includeSeconds: converterOptions.includeSeconds,\n    addSuffix: (_b = converterOptions.addSuffix) != null ? _b : true,\n    locale: locale2\n  });\n};\nconst createTimeago = (opts = {}) => {\n  const name = opts.name || \"Timeago\";\n  return defineComponent({\n    name,\n    props: {\n      datetime: {\n        type: [String, Number, Date],\n        required: true\n      },\n      title: {\n        type: [String, Boolean],\n        required: false,\n        default: null\n      },\n      autoUpdate: {\n        type: [Number, Boolean],\n        required: false,\n        default: null\n      },\n      converter: {\n        type: Function,\n        required: false,\n        default: null\n      },\n      converterOptions: {\n        type: Object,\n        required: false,\n        default: null\n      },\n      locale: {\n        type: Object,\n        required: false,\n        default: null\n      }\n    },\n    setup(props) {\n      const updateTimer = ref();\n      onBeforeMount(() => {\n        startUpdater();\n      });\n      onBeforeUnmount(() => {\n        stopUpdater();\n      });\n      const getTimeago = (datetime) => {\n        const converter = props.converter || defaultConverter;\n        return converter(datetime || props.datetime, props.converterOptions || opts.converterOptions, props.locale || opts.locale);\n      };\n      const timeago = ref(getTimeago());\n      const convert = (datetime) => {\n        timeago.value = getTimeago(datetime);\n      };\n      const startUpdater = () => {\n        if (props.autoUpdate) {\n          const autoUpdate = props.autoUpdate === true ? 60 : props.autoUpdate;\n          updateTimer.value = setInterval(() => {\n            convert(props.datetime);\n          }, autoUpdate * 1e3);\n        }\n      };\n      const stopUpdater = () => {\n        if (updateTimer.value) {\n          clearInterval(updateTimer.value);\n          updateTimer.value = void 0;\n        }\n      };\n      watch(() => props.autoUpdate, (newValue) => {\n        stopUpdater();\n        if (newValue) {\n          startUpdater();\n        }\n      });\n      watch(() => [props.datetime, props.converter], () => {\n        convert();\n      });\n      watch(() => props.converterOptions, () => {\n        convert();\n      }, {\n        deep: true\n      });\n      return { timeago, updateTimer };\n    },\n    render() {\n      return h(\"timeago\", {\n        attrs: {\n          datetime: new Date(this.datetime).toISOString(),\n          title: typeof this.title === \"string\" ? this.title : this.title === false ? null : this.timeago\n        }\n      }, [this.timeago]);\n    }\n  });\n};\nvar install = (app, options) => {\n  if (app.config.globalProperties.$timeago) {\n    return;\n  }\n  const version = Number(app.version.split(\".\")[0]);\n  if (version < 3) {\n    console.warn(\"[vue-timeago3] This plugin requires at least Vue version 3.0\");\n  }\n  const Component = createTimeago(options);\n  app.component(Component.name, Component);\n};\nexport { install as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}